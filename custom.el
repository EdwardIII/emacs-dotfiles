(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(auth-source-save-behavior nil)
 '(circe-default-part-message "Bye!")
 '(circe-default-quit-message "All the best.")
 '(circe-default-realname "Edward")
 '(circe-highlight-nick-type 'message)
 '(circe-lagmon-mode t)
 '(circe-reduce-lurker-spam t)
 '(circe-track-faces-priorities '(circe-highlight-nick-face))
 '(company-dabbrev-downcase nil)
 '(connection-local-criteria-alist
   '(((:machine "vagrant")
      vagrant-vars)
     ((:application tramp)
      tramp-connection-local-default-system-profile tramp-connection-local-default-shell-profile)))
 '(connection-local-profile-alist
   '((vagrant-vars
      (company-gtags--executable-connection))
     (tramp-connection-local-darwin-ps-profile
      (tramp-process-attributes-ps-args "-acxww" "-o" "pid,uid,user,gid,comm=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "-o" "state=abcde" "-o" "ppid,pgid,sess,tty,tpgid,minflt,majflt,time,pri,nice,vsz,rss,etime,pcpu,pmem,args")
      (tramp-process-attributes-ps-format
       (pid . number)
       (euid . number)
       (user . string)
       (egid . number)
       (comm . 52)
       (state . 5)
       (ppid . number)
       (pgrp . number)
       (sess . number)
       (ttname . string)
       (tpgid . number)
       (minflt . number)
       (majflt . number)
       (time . tramp-ps-time)
       (pri . number)
       (nice . number)
       (vsize . number)
       (rss . number)
       (etime . tramp-ps-time)
       (pcpu . number)
       (pmem . number)
       (args)))
     (tramp-connection-local-busybox-ps-profile
      (tramp-process-attributes-ps-args "-o" "pid,user,group,comm=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "-o" "stat=abcde" "-o" "ppid,pgid,tty,time,nice,etime,args")
      (tramp-process-attributes-ps-format
       (pid . number)
       (user . string)
       (group . string)
       (comm . 52)
       (state . 5)
       (ppid . number)
       (pgrp . number)
       (ttname . string)
       (time . tramp-ps-time)
       (nice . number)
       (etime . tramp-ps-time)
       (args)))
     (tramp-connection-local-bsd-ps-profile
      (tramp-process-attributes-ps-args "-acxww" "-o" "pid,euid,user,egid,egroup,comm=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "-o" "state,ppid,pgid,sid,tty,tpgid,minflt,majflt,time,pri,nice,vsz,rss,etimes,pcpu,pmem,args")
      (tramp-process-attributes-ps-format
       (pid . number)
       (euid . number)
       (user . string)
       (egid . number)
       (group . string)
       (comm . 52)
       (state . string)
       (ppid . number)
       (pgrp . number)
       (sess . number)
       (ttname . string)
       (tpgid . number)
       (minflt . number)
       (majflt . number)
       (time . tramp-ps-time)
       (pri . number)
       (nice . number)
       (vsize . number)
       (rss . number)
       (etime . number)
       (pcpu . number)
       (pmem . number)
       (args)))
     (tramp-connection-local-default-shell-profile
      (shell-file-name . "/bin/sh")
      (shell-command-switch . "-c"))
     (tramp-connection-local-default-system-profile
      (path-separator . ":")
      (null-device . "/dev/null"))))
 '(cperl-indent-parens-as-block t)
 '(css-indent-offset 2)
 '(dabbrev-case-fold-search t)
 '(dabbrev-case-replace t)
 '(dap-auto-configure-features '(sessions locals breakpoints expressions controls))
 '(ediff-merge-split-window-function 'split-window-vertically)
 '(ediff-split-window-function 'split-window-horizontally)
 '(ediff-window-setup-function 'ediff-setup-windows-plain)
 '(erc-hide-list '("JOIN" "PART" "QUIT" "MODE"))
 '(erc-modules
   '(button completion fill irccontrols keep-place match move-to-prompt netsplit notify notifications ring scrolltobottom stamp spelling track hl-nicks netsplit fill button match track completion readonly networks ring autojoin noncommands irccontrols move-to-prompt stamp menu list))
 '(erc-port 1337)
 '(erc-track-exclude-server-buffer t)
 '(erc-track-exclude-types '("JOIN" "KICK" "NICK" "PART" "QUIT" "MODE" "333" "353"))
 '(erc-track-priority-faces-only 'all)
 '(flycheck-checkers
   '(typescript-tide-ts tsx-tide typescript-tide clj-kondo-edn clj-kondo-cljc clj-kondo-cljs clj-kondo-clj ada-gnat asciidoctor asciidoc awk-gawk bazel-build-buildifier bazel-module-buildifier bazel-starlark-buildifier bazel-workspace-buildifier c/c++-clang c/c++-gcc c/c++-cppcheck cfengine chef-foodcritic coffee coffee-coffeelint coq css-csslint css-stylelint cuda-nvcc cwl d-dmd dockerfile-hadolint elixir-credo emacs-lisp emacs-lisp-checkdoc ember-template erlang-rebar3 erlang eruby-erubis eruby-ruumba fortran-gfortran go-gofmt go-golint go-vet go-build go-test go-errcheck go-unconvert go-staticcheck groovy haml handlebars haskell-stack-ghc haskell-ghc haskell-hlint html-tidy javascript-eslint javascript-jshint javascript-standard json-jsonlint json-python-json json-jq jsonnet less less-stylelint llvm-llc lua-luacheck lua markdown-markdownlint-cli markdown-mdl nix nix-linter opam perl perl-perlcritic php php-phpmd php-phpcs processing proselint protobuf-protoc protobuf-prototool pug puppet-parser puppet-lint python-flake8 python-pylint python-pycompile python-pyright python-mypy r-lintr racket rpm-rpmlint rst-sphinx rst ruby-rubocop ruby-standard ruby-reek ruby-rubylint ruby ruby-jruby rust-cargo rust rust-clippy scala scala-scalastyle scheme-chicken scss-lint scss-stylelint sass/scss-sass-lint sass scss sh-bash sh-posix-dash sh-posix-bash sh-zsh sh-shellcheck slim slim-lint sql-sqlint systemd-analyze tcl-nagelfar terraform terraform-tflint tex-chktex tex-lacheck texinfo textlint typescript-tslint verilog-verilator vhdl-ghdl xml-xmlstarlet xml-xmllint yaml-jsyaml yaml-ruby yaml-yamllint javascript-tide jsx-tide))
 '(flycheck-perl-include-path '("/home/vagrant/dev/vX/WCN/lib"))
 '(flycheck-stylelintrc "~/.stylelintrc.json")
 '(lsp-completion-provider :capf)
 '(lui-flyspell-p t)
 '(org-confirm-babel-evaluate nil)
 '(org-link-shell-confirm-function nil)
 '(package-selected-packages
   '(better-jumper multiple-cursors copilot editorconfig async simple-httpd scss-mode scss tree-sitter-langs tree-sitter flycheck-clj-kondo all-the-icons dap-mode typescript-mode flycheck ivy ace-window button-lock slime browse-kill-ring nord-theme god-mode mode-line-bell ts-comint yafolding sqlformat elisp-mode elisp circe-notifications circe-color-nicks circe elisp-format js-mode vterm exwm web-mode cperl guru-mode doom-modeline solarized-theme yasnippet lsp-metals lsp-ivy lsp-ui lsp-mode sbt-mode scala-mode use-package ag tt-mode php-mode org-mime load-dir json-mode erc-hl-nicks bufler znc ng2-mode forge counsel company tide projectile smex which-key magit cider clojure-mode exec-path-from-shell paredit))
 '(projectile-globally-ignored-directories
   '(".idea" ".vscode" ".ensime_cache" ".eunit" ".git" ".hg" ".fslckout" "_FOSSIL_" ".bzr" "_darcs" ".pijul" ".tox" ".svn" ".stack-work" ".ccls-cache" ".cache" ".clangd" "*node_modules" "*baseline" "*swagger-ui-dist"))
 '(projectile-globally-ignored-file-suffixes '("jar" "bin" "js.map"))
 '(safe-local-variable-values
   '((auto-revert-buffer-list-filter function magit-auto-revert-repository-buffer-p)
     (auto-revert-buffer-list-filter quote magit-auto-revert-repository-buffer-p)
     (magit-refresh-status-buffer)
     (magit-refresh-buffers)))
 '(set-mark-command-repeat-pop t)
 '(tracking-faces-priorities '(circe-highlight-nick-face))
 '(tracking-ignored-buffers '((".*")))
 '(tracking-mode t)
 '(tree-sitter-major-mode-language-alist
   '((agda2-mode . agda)
     (sh-mode . bash)
     (c-mode . c)
     (caml-mode . ocaml)
     (clojure-mode . clojure)
     (csharp-mode . c-sharp)
     (c++-mode . cpp)
     (d-mode . d)
     (css-mode . css)
     (elm-mode . elm)
     (elixir-mode . elixir)
     (erlang-mode . erlang)
     (ess-r-mode . r)
     (fennel-mode . fennel)
     (go-mode . go)
     (haskell-mode . haskell)
     (hcl-mode . hcl)
     (terraform-mode . hcl)
     (html-mode . html)
     (markdown-mode . markdown)
     (mhtml-mode . html)
     (nix-mode . nix)
     (java-mode . java)
     (javascript-mode . javascript)
     (js-mode . javascript)
     (js2-mode . javascript)
     (js3-mode . javascript)
     (json-mode . json)
     (jsonc-mode . json)
     (julia-mode . julia)
     (lua-mode . lua)
     (ocaml-mode . ocaml)
     (perl-mode . perl)
     (php-mode . php)
     (prisma-mode . prisma)
     (python-mode . python)
     (pygn-mode . pgn)
     (rjsx-mode . javascript)
     (ruby-mode . ruby)
     (rust-mode . rust)
     (rustic-mode . rust)
     (scala-mode . scala)
     (swift-mode . swift)
     (toml-mode . toml)
     (tuareg-mode . ocaml)
     (typescript-ts-mode . typescript)
     (typescript-mode . typescript)
     (verilog-mode . verilog)
     (yaml-mode . yaml)
     (zig-mode . zig)))
 '(typescript-indent-level 2 t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
